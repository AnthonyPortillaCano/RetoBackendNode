service: star-wars-api

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  environment:
    DB_TABLE: StarWarsTable-${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:PutItem"
        - "dynamodb:GetItem"
        - "dynamodb:Scan"
      Resource: "arn:aws:dynamodb:*:*:table/${self:provider.environment.DB_TABLE}"

functions:
  createCharacter:
    handler: src/handler.createCharacter
    events:
      - http:
          path: character
          method: post
  listCharacters:
    handler: src/handler.listCharacters
    events:
      - http:
          path: characters
          method: get
  serveSwagger:
    handler: src/handler.serveSwagger
    events:
      - http:
          path: swagger/swagger.json
          method: get
plugins:
  - serverless-openapi-documentation
  - serverless-plugin-typescript
  - serverless-offline

resources:
  Resources:
    StarWarsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

package:
  individually: true  # Package each function separately to minimize the size
  exclude:
    - tests/**
    - coverage/**
    - .git/**
    - .vscode/**